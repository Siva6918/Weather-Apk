import React, { useState } from "react";

const HowItWorks = () => {
  const [language, setLanguage] = useState("en");
  const [isOpen, setIsOpen] = useState(false);

  const content = {
    en: [
      { icon: "üå§", text: "Enter a city name and press Submit to fetch weather data." },
      { icon: "üìç", text: "Click Geolocation to use your current location." },
      { icon: "üå°", text: "Toggle between ¬∞C and ¬∞F." },
      { icon: "üîÑ", text: "View temperature, humidity, and wind speed." },
    ],
    hi: [
      { icon: "üå§", text: "‡§∂‡§π‡§∞ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§¨‡§Æ‡§ø‡§ü ‡§¶‡§¨‡§æ‡§è‡§Ç‡•§" },
      { icon: "üìç", text: "Geolocation ‡§∏‡•á ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§" },
      { icon: "üå°", text: "¬∞C ‡§î‡§∞ ¬∞F ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§ü‡•â‡§ó‡§≤ ‡§ï‡§∞‡•á‡§Ç‡•§" },
      { icon: "üîÑ", text: "‡§§‡§æ‡§™‡§Æ‡§æ‡§®, ‡§®‡§Æ‡•Ä ‡§î‡§∞ ‡§™‡§µ‡§® ‡§ó‡§§‡§ø ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§" },
    ],
    te: [
      { icon: "üå§", text: "‡∞®‡∞ó‡∞∞ ‡∞™‡±á‡∞∞‡±Å ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞∏‡∞ø Submit ‡∞®‡±ä‡∞ï‡±ç‡∞ï‡∞Ç‡∞°‡∞ø." },
      { icon: "üìç", text: "‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞∏‡±ç‡∞•‡∞æ‡∞®‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø Geolocation ‡∞®‡±ä‡∞ï‡±ç‡∞ï‡∞Ç‡∞°‡∞ø." },
      { icon: "üå°", text: "¬∞C ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ¬∞F ‡∞Æ‡∞ß‡±ç‡∞Ø ‡∞ü‡∞æ‡∞ó‡∞ø‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø." },
      { icon: "üîÑ", text: "‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§, ‡∞§‡±á‡∞Æ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ó‡∞æ‡∞≤‡∞ø ‡∞µ‡±á‡∞ó‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø." },
    ],
    ta: [
      { icon: "üå§", text: "‡Æ®‡Æï‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Øç ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Øç‡Æü‡ØÅ Submit ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç." },
      { icon: "üìç", text: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ§‡Æ±‡Øç‡Æ™‡Øã‡Æ§‡Øà‡ÆØ ‡Æá‡Æ∞‡ØÅ‡Æ™‡Øç‡Æ™‡Æø‡Æü‡Æ§‡Øç‡Æ§‡Øà ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§ Geolocation ‡Æê ‡Æï‡Æø‡Æ≥‡Æø‡Æï‡Øç ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç." },
      { icon: "üå°", text: "¬∞C ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ¬∞F ‡Æá‡Æü‡Øà‡ÆØ‡Øá ‡ÆÆ‡Ææ‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç." },
      { icon: "üîÑ", text: "‡Æµ‡ØÜ‡Æ™‡Øç‡Æ™‡Æ®‡Æø‡Æ≤‡Øà, ‡Æà‡Æ∞‡Æ™‡Øç‡Æ™‡Æ§‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡Ææ‡Æ±‡Øç‡Æ±‡Æø‡Æ©‡Øç ‡Æµ‡Øá‡Æï‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡Ææ‡Æ£‡Øç‡Æï." },
    ],
    kn: [
      { icon: "üå§", text: "‡≤®‡≤ó‡≤∞‡≤¶ ‡≤π‡≥Ü‡≤∏‡≤∞‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≤Æ‡≥Ç‡≤¶‡≤ø‡≤∏‡≤ø Submit ‡≤í‡≤§‡≥ç‡≤§‡≤ø." },
      { icon: "üìç", text: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ —Ç–µ–∫Current ‡≤∏‡≥ç‡≤•‡≤≥‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤≤‡≥Å Geolocation ‡≤ï‡≥ç‡≤≤‡≤ø‡≤ï‡≥ç ‡≤Æ‡≤æ‡≤°‡≤ø." },
      { icon: "üå°", text: "¬∞C ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ¬∞F ‡≤®‡≤°‡≥Å‡≤µ‡≥Ü ‡≤ü‡≤æ‡≤ó‡≤≤‡≥ç ‡≤Æ‡≤æ‡≤°‡≤ø." },
      { icon: "üîÑ", text: "‡≤§‡≤æ‡≤™‡≤Æ‡≤æ‡≤®, ‡≤Ü‡≤∞‡≥ç‡≤¶‡≥ç‡≤∞‡≤§‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ó‡≤æ‡≤≥‡≤ø‡≤Ø ‡≤µ‡≥á‡≤ó‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤µ‡≥Ä‡≤ï‡≥ç‡≤∑‡≤ø‡≤∏‡≤ø." },
    ],
    bn: [
      { icon: "üå§", text: "‡¶è‡¶ï‡¶ü‡¶ø ‡¶∂‡¶π‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶¨‡¶Æ‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§" },
      { icon: "üìç", text: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá Geolocation ‡¶ö‡¶æ‡¶™‡ßÅ‡¶®‡•§" },
      { icon: "üå°", text: "¬∞C ‡¶è‡¶¨‡¶Ç ¬∞F ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ü‡¶ó‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§" },
      { icon: "üîÑ", text: "‡¶§‡¶æ‡¶™‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ, ‡¶Ü‡¶∞‡ßç‡¶¶‡ßç‡¶∞‡¶§‡¶æ ‡¶ì ‡¶¨‡¶æ‡¶§‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ó‡¶§‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®‡•§" },
    ],
  };

  const toggleOpen = () => setIsOpen(!isOpen);

  return (
    <div className="how-it-works" style={{ maxWidth: "480px", margin: "2rem auto", color: "#cbd5e1" }}>
      <button
        onClick={toggleOpen}
        style={{
          background: "linear-gradient(135deg, #fef08a, #f59e0b)",
          border: "none",
          borderRadius: "20px",
          padding: "12px 24px",
          fontWeight: "700",
          color: "#1e293b",
          cursor: "pointer",
          boxShadow: "0 4px 8px rgba(254, 224, 102, 0.7)",
          userSelect: "none",
          width: "100%",
          marginBottom: "1rem",
        }}
      >
        {isOpen ? "Close How It Works" : "How This Weather App Works"}
      </button>

      {isOpen && (
        <div style={{ backgroundColor: "rgba(20, 40, 75, 0.85)", borderRadius: "16px", padding: "1rem", boxShadow: "0 2px 8px rgba(0,0,0,0.4)" }}>
          <div style={{ marginBottom: "1rem", textAlign: "left" }}>
            <label htmlFor="language" style={{ fontWeight: "700", marginRight: "0.5rem" }}>
              Language:
            </label>
            <select
              id="language"
              value={language}
              onChange={(e) => setLanguage(e.target.value)}
              style={{
                padding: "6px 10px",
                borderRadius: "8px",
                border: "none",
                fontWeight: "600",
                background: "rgba(5, 55, 136, 0.2)",
                color: "rgba(238, 186, 15, 0.9)",
                backgroundColor:"#444",
                outline: "none",
              }}
            >
              <option value="en">English</option>
              <option value="hi">‡§π‡§ø‡§Ç‡§¶‡•Ä</option>
              <option value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</option>
              <option value="ta">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç</option>
              <option value="kn">‡≤ï‡≤®‡≥ç‡≤®‡≤°</option>
              <option value="bn">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ</option>
            </select>
          </div>

          {content[language].map((item, index) => (
            <p key={index} style={{ marginBottom: "0.8rem", fontSize: "1rem" }}>
              <span style={{ marginRight: "8px" }}>{item.icon}</span> {item.text}
            </p>
          ))}
        </div>
      )}
    </div>
  );
};

export default HowItWorks;
